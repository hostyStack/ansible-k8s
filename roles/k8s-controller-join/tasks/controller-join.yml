---

- name: Create directories for certificates
  file:
    path: "/etc/kubernetes/pki/etcd"
    state: directory
  become: yes

- name: Copy controlplane certificates
  copy:
    src: "cluster/{{ item }}"
    dest: /etc/kubernetes/pki
    owner: root
    group: root
  become: yes
  with_items:
    - admin.conf
    - ca.crt
    - ca.key
    - sa.key
    - sa.pub
    - front-proxy-ca.crt
    - front-proxy-ca.key

- name: Copy etcd certificates
  copy:
    src: "cluster/etcd/{{ item }}"
    dest: /etc/kubernetes/pki/etcd
    owner: root
    group: root
  become: yes
  with_items:
    - ca.crt
    - ca.key

- name: Generate short-lived join token
  command: "kubeadm token create --description='Join for {{ inventory_hostname }}' --ttl=5m"
  delegate_to: "{{ groups['cluster_init'][0] }}"
  register: join_token

- name: Generate hash for CA certificate
  shell: "openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'"
  become: yes
  register: public_key_hash

- name: Join controlplane
  shell: "kubeadm join {{ k8s.load_balancer }}:6443 --token {{ join_token.stdout_lines.0 }} --discovery-token-ca-cert-hash sha256:{{ public_key_hash.stdout_lines.0 }} --experimental-control-plane --cri-socket {{ k8s.cri_socket }}"
  become: yes
  register: cluster_join

- name: Add DNS record for new node
  cloudflare_dns:
    zone: "{{ k8s.dns_zone }}"
    record: "{{ k8s.dns_record }}"
    type: A
    value: "{{ ansible_default_ipv4.address }}"
    account_email: "{{ cloudflare.email }}"
    account_api_token: "{{ cloudflare.token }}"
  when: cluster_join is defined and not cluster_join.failed
