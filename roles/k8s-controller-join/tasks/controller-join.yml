---

- name: Create directories for certificates
  file:
    path: "/etc/kubernetes/pki/etcd"
    state: directory
  become: yes

- name: Copy controlplane certificates
  copy:
    src: "cluster/{{ item }}"
    dest: /etc/kubernetes/pki
    owner: root
    group: root
  become: yes
  with_items:
    - admin.conf
    - ca.crt
    - ca.key
    - sa.key
    - sa.pub
    - front-proxy-ca.crt
    - front-proxy-ca.key

- name: Copy etcd certificates
  copy:
    src: "cluster/etcd/{{ item }}"
    dest: /etc/kubernetes/pki/etcd
    owner: root
    group: root
  become: yes
  with_items:
    - ca.crt
    - ca.key

- name: Determine CRI socket
  stat:
    path: /var/run/containerd/containerd.sock
  become: yes
  register: containerd_sock

- name: Add parameter for CRI socket
  set_fact:
    cri_socket: "--cri-socket /var/run/containerd/containerd.sock"
  when: 'containerd_sock.stat.exists and containerd_sock.stat.issock'

- name: Generate short-lived join token
  command: "kubeadm token create --description='Join for {{ inventory_hostname }}' --ttl=5m"
  become: yes
  delegate_to: "{{ first_controller }}"
  register: join_token

- name: Generate hash for CA certificate
  shell: "openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'"
  become: yes
  register: public_key_hash

- name: Join controlplane
  shell: "kubeadm join {{ k8s.load_balancer }}:6443 --token {{ join_token.stdout_lines.0 }} --discovery-token-ca-cert-hash sha256:{{ public_key_hash.stdout_lines.0 }} --experimental-control-plane {{ cri_socket | default() }}"
  become: yes
