---

- name: Provision nodes
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - vars/hcloud/vars.yml
    - vars/hcloud/vault.yml
  tasks:
    - hcloud_server:
        name:
          - master1
          - master2
          - master3
          - worker1
          - worker2
        image: "{{ hcloud.image }}"
        server_type: "{{ hcloud.server_type }}"
        location: "{{ hcloud.location }}"
        ssh_keys: "{{ hcloud.ssh_keys"
        token: "{{ hcloud.token }}"
      register: nodes
    - add_host:
        name: "{{ item.name }}"
        ansible_host: "{{ item.public_ipv4 }}"
        ansible_user: root
        ansible_ssh_private_key_file: "{{ hcloud.ssh_private_key }}"
        hcloud_server_id: "{{ item.id }}"
        groups:
          - k8s
      with_items: "{{ nodes.servers }}"
  tags:
    - provision

- name: Create SSH config
  hosts: k8s
  gather_facts: no
  tasks:
    - copy:
        content: |
          # config for {{ inventory_hostname }}
          Host {{ inventory_hostname }}
              HostName {{ ansible_host }}
              User {{ ansible_user }}
              IdentityFile {{ ansible_ssh_private_key_file }}
              StrictHostKeyChecking no
              UserKnownHostsFile /dev/null
        dest: "~/.ssh/config.d/hcloud_{{ inventory_hostname }}"
        mode: "0640"
      delegate_to: localhost
  tags:
    - provision

- name: Prepare nodes for Ansible
  hosts: k8s
  gather_facts: no
  tasks:
    - name: Wait for SSH to be available
      wait_for:
        host: "{{ ansible_host }}"
        port: 22
        connect_timeout: 5
        timeout: 60
      delegate_to: localhost
    - name: Making sure no other apt-get task is running
      raw: "while lsof /var/lib/apt/lists/lock; do sleep 5; done"
    - name: Install updates
      raw: "apt-get update && apt-get -y upgrade"
    - name: Install Python
      raw: "apt-get -y install python-pip jq"
  tags:
    - provision

- name: Manage volume
  hosts: k8s
  vars:
    hcloud_path: ~/.local/bin/
  tasks:
    - name: Check if volume exists
      shell: "{{ hcloud_path }}hcloud volume list -o columns=name | grep {{ inventory_hostname }}-docker"
      register: volume_exists
      failed_when: '"command not found" in volume_exists.stderr'
      delegate_to: localhost

    - debug:
        var: volume_exists
        verbosity: 1
    - name: Create volume
      shell: "{{ hcloud_path }}hcloud volume create --size 20 --name {{ inventory_hostname }}-docker --location nbg1"
      delegate_to: localhost
      when: 'volume_exists is defined and volume_exists.failed'
    - name: Check if volume is attached
      shell: "{{ hcloud_path }}hcloud volume list -o columns=name,server | grep {{ inventory_hostname }}-docker | grep {{ hcloud_server_id }}"
      register: volume_attached
      failed_when: '"command not found" in volume_attached.stderr'
      delegate_to: localhost
    - debug:
        var: volume_attached
        verbosity: 1
    - name: Attach volume
      shell: "{{ hcloud_path }}hcloud volume attach --server {{ inventory_hostname }} {{ inventory_hostname }}-docker"
      delegate_to: localhost
      when: 'volume_attached is defined and volume_attached.failed'
  tags:
    - provision
